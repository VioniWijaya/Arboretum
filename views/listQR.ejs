<%- include('header')%>
<!-- Main Content -->
<main class="container mx-auto mt-6 px-6 ">
    <div class="bg-white rounded-lg shadow-lg p-6">
        <div class="flex justify-between items-center">
            <!-- Tambahkan ini setelah div flex justify-between di kedua halaman -->
            
            <div>
                <h2 class="text-xl font-bold">Daftar Tanaman</h2>
                <h3 class="text-gray-400 font-bold">Total Tanaman : <%= totalTanaman %> jenis</h3>
            </div>
            <div class="mt-4 mb-2">
                <form id="searchForm" class="flex gap-2">
                    <div class="flex-grow">
                        <input 
                        type="text" 
                        name="search" 
                        id="searchInput"
                        value="<%= search || '' %>"
                        placeholder="  Cari nama tanaman..." 
                        class="w-full  p-2 border border-green-700 rounded-full focus:outline-none focus:ring-2 focus:ring-green-700"
                        >
                    </div>
                    <button 
                    type="submit"
                    class="bg-green-700 text-white px-4 py-2 rounded-lg hover:bg-green-800 flex items-center gap-2"
                    >
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                    </svg>
                    <!-- <span>Cari</span> -->
                </button>
                <button 
                type="button"
                id="resetButton"
                class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 flex items-center gap-2"
                >
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                </svg>
                <!-- <span>Reset</span> -->
            </button>
            <button onclick="downloadAllQRCodes()" class="flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                </svg>
                <span>Unduh Semua QRCode</span>
            </button>
                </form>
            </div>
        </div>

        <table class="w-full mt-4">
            <thead>
                <tr class="text-left text-gray-500 border-b">
                    <th class="py-2 w-16">No</th>
                    <th class="py-2 w-64">Nama Tanaman</th>
                    <th class="py-2 w-48">Lokasi</th>
                    <th class="py-2 w-96">Deskripsi</th>
                    <th class="py-2 w-48">Aksi</th>
                </tr>
            </thead>
            <tbody>
                <% tanaman.forEach(function(item) { %>
                <tr class="border-b hover:bg-gray-50">
                    <td class="py-4"><%= item.no %></td>
                    <td class="py-4 flex items-center space-x-4">
                        <img src="<%= item.foto || 'https://via.placeholder.com/40' %>" alt="Avatar" class="w-10 h-10 rounded-full">
                        <div>
                            <p class="font-bold"><%= item.nama %></p>
                        </div>
                    </td>
                    <td class="py-4"><%= item.lokasi %></td>
                    <td class="py-4"><%= item.deskripsi.length > 50 ? item.deskripsi.substring(0, 50) + '...' : item.deskripsi %></td>
                    <td class="py-4">
                        <button onclick="downloadQRCode('<%= item.id %>', '<%= item.nama %>')" class="flex items-center space-x-2 bg-teal-500 text-white px-4 py-2 rounded-lg hover:bg-teal-600">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-5 h-5">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                            </svg>
                            <span>Unduh QRCode</span>
                        </button>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>

        <!-- Pagination section remains the same -->
        <div class="flex justify-end items-end space-x-4 mt-6">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300">
                    Sebelumnya
                </a>
            <% } %>

            <% for(let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="px-4 py-2 <%= currentPage === i ? 'bg-blue-500 text-white' : 'bg-gray-200' %> rounded-lg hover:bg-gray-300">
                    <%= i %>
                </a>
            <% } %>

            <% if (currentPage < totalPages) { %>
                <a href="?page=<%= currentPage + 1 %>" class="px-4 py-2 bg-gray-200 rounded-lg hover:bg-gray-300">
                    Selanjutnya
                </a>
            <% } %>
        </div>
    </div>
</main>

<script>
async function downloadQRCode(id, nama) {
    try {
        const response = await fetch(`/qrcodes/${id}.png`);
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `${nama.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_qr.png`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        a.remove();
    } catch (error) {
        console.error('Download error:', error);
        alert('Gagal mengunduh QR Code');
    }
}

async function downloadAllQRCodes() {
    try {
        const response = await fetch('/download-all-qrcodes');
        if (!response.ok) throw new Error('Download failed');
        
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = 'semua_qrcode.zip';
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        a.remove();
    } catch (error) {
        console.error('Download error:', error);
        alert('Gagal mengunduh QR Codes');
    }
}
</script>
<script>
    const searchForm = document.getElementById('searchForm');
    const searchInput = document.getElementById('searchInput');
    const resetButton = document.getElementById('resetButton');
    
    // Handle form submission
    searchForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const searchValue = searchInput.value.trim();
        
        // Get current URL and update search parameter
        const url = new URL(window.location.href);
        if (searchValue) {
            url.searchParams.set('search', searchValue);
        } else {
            url.searchParams.delete('search');
        }
        
        // Reset to first page when searching
        url.searchParams.set('page', '1');
        
        window.location.href = url.toString();
    });
    
    // Handle reset button
    resetButton.addEventListener('click', () => {
        const url = new URL(window.location.href);
        url.searchParams.delete('search');
        url.searchParams.set('page', '1');
        window.location.href = url.toString();
    });
    
    // Update pagination links to maintain search parameter
    document.querySelectorAll('a[href*="?page="]').forEach(link => {
        const url = new URL(link.href);
        const searchValue = new URLSearchParams(window.location.search).get('search');
        if (searchValue) {
            url.searchParams.set('search', searchValue);
            link.href = url.toString();
        }
    });
    </script>